name: ci

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ffmpeg \
            libgl1-mesa-dev \
            libgl1-mesa-glx \
            libglfw3 \
            libosmesa6-dev \
            patchelf \
            python3-opengl \
            xvfb

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Install project (dev)
        run: |
          uv pip install .[dev]

      - name: Run pre-commit
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          pre-commit run --all-files --show-diff-on-failure

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ffmpeg \
            libgl1-mesa-dev \
            libgl1-mesa-glx \
            libglfw3 \
            libosmesa6-dev \
            patchelf \
            python3-opengl \
            xvfb

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Install project (dev + examples)
        run: |
          uv pip install .[dev,examples]

      - name: Run tests (coverage)
        run: |
          coverage run -m pytest -vv tests
          coverage xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
